<base:MagniGridBase  x:Class="MagniGrid.WPF.CRUD.MagniGridCRUD"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:base="clr-namespace:MagniGrid.WPF"
                     xmlns:local="clr-namespace:MagniGrid.WPF.CRUD"
                     xmlns:converter="clr-namespace:MagniGrid.Core.Converters;assembly=MagniGrid.Core"
                     mc:Ignorable="d" 
                     d:DesignHeight="30" d:DesignWidth="300"
                     Height="Auto" Width="Auto"
                     AutoGenerateColumns="True" 
                     ColumnWidth="*" 
                   
                     CanUserReorderColumns="False"
                     CanUserResizeColumns="True"
                     CanUserResizeRows="False"
                     CanUserDeleteRows="False"
                     GridLinesVisibility="None"
                     BorderThickness="1"
                     EnableColumnVirtualization="True"
                     EnableRowVirtualization="False"
                     CanUserSortColumns="False"
                     ScrollViewer.CanContentScroll="False"
                        
                     CellEditEnding="CRUD_CellEditEnding">

    <DataGrid.Resources>
        <converter:BoolConverter x:Key="Visibility_ValueConverter"/>
        <Style TargetType="{x:Type DataGridCell}" x:Key="ContentStyle">
            <Setter Property="Template" x:Name="custom_template">
                <Setter.Value>
                    <ControlTemplate x:Name="CustomCellTemplate" TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <Border BorderBrush="#A0A0A0" BorderThickness="0,0,1,1"/>
                            <ContentPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="6,2,6,2"/>
                            <ContentControl FontFamily="Myanmar Text" FontSize="20" 
                                            HorizontalAlignment="Center" VerticalAlignment="Center"
                                            HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </DataGrid.Resources>

    <DataGrid.RowValidationErrorTemplate>
        <ControlTemplate>
            <Grid Margin="9,-2,0,-2" ToolTip="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=(Validation.Errors)[0].ErrorContent}">
                <Ellipse StrokeThickness="0" Fill="Red" Width="{TemplateBinding FontSize}" Height="{TemplateBinding FontSize}"/>
                <TextBlock Text="!" FontSize="{TemplateBinding FontSize}" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center" Margin="0,3,0,0"/>
            </Grid>
        </ControlTemplate>
    </DataGrid.RowValidationErrorTemplate>

    <DataGrid.ColumnHeaderStyle>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <!--#region Triggers-->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#A0A0A0"/>
                    <Setter Property="BorderThickness" Value="1,1,1,1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="BorderBrush" Value="#A0A0A0"/>
                    <Setter Property="BorderThickness" Value="1,1,1,1"/>
                    <Setter Property="Background" Value="#FFB6B6B6"/>
                </Trigger>
            </Style.Triggers>
            <!--#endregion-->
            <!--#region Setters-->
            <Setter Property="FontFamily" Value="Myanmar Text"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Background" Value="#ffffff"/>
            <Setter Property="BorderThickness" Value="1,1,0,1"/>
            <Setter Property="Padding" Value="7,5,5,0"/>
            <Setter Property="BorderBrush" Value="#e5e5e5"/>
            <Setter Property="TextBlock.TextAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="TextBlock.TextWrapping" Value="WrapWithOverflow"/>
            <!--#endregion-->
        </Style>
    </DataGrid.ColumnHeaderStyle>

    <DataGrid.RowHeaderStyle>
        <Style TargetType="{x:Type DataGridRowHeader}">

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#A0A0A0"/>
                    <Setter Property="BorderThickness" Value="1,1,1,1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="BorderBrush" Value="#A0A0A0"/>
                    <Setter Property="BorderThickness" Value="1,1,1,1"/>
                </Trigger>
            </Style.Triggers>

            <Setter Property="Background" Value="#ffffff"/>
            <Setter Property="BorderBrush" Value="#e5e5e5"/>
            <Setter Property="BorderThickness" Value="1,0,1,1"/>
            <Setter Property="Width" Value="33"/>
            <Setter Property="Height" Value="20"/>
        </Style>
    </DataGrid.RowHeaderStyle>

    <DataGrid.RowStyle>
        <Style TargetType="{x:Type DataGridRow}" x:Name="VisibilityRows">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Visibility, Converter={StaticResource Visibility_ValueConverter}, Mode=TwoWay}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Visibility, Converter={StaticResource Visibility_ValueConverter}, Mode=TwoWay}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
            <EventSetter Event="MouseDoubleClick" Handler="CRUD_RowDoubleClick"/>
        </Style>
    </DataGrid.RowStyle>

    <DataGrid.CellStyle>
        <Style TargetType="{x:Type DataGridCell}">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#FF7B7E99"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="Background" Value="#FF4DA2D8"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#ABABAB"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Name="CustomCellTemplate" TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <Border BorderBrush="#A0A0A0" BorderThickness="0,0,1,1"/>
                            <ContentPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="6,2,6,2"/>
                            <ContentControl FontFamily="Myanmar Text" FontSize="20" 
                                            HorizontalAlignment="Center" VerticalAlignment="Center"
                                            HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </DataGrid.CellStyle>

</base:MagniGridBase>
